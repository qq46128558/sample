#!/usr/bin/env python3
# -*- coding: utf-8 -*-

L=['Michael','Sarah','Tracy','Bob','Jack']
# Python提供了切片（Slice）操作符
# L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。
print('01.',L[0:3])
# 如果第一个索引是0，还可以省略：
print('02.',L[:3])
# 也可以从索引1开始，取出2个元素出来：
print('03.',L[1:3])
# 取最后两个
print('04.',L[-2:])
# 取倒数2,3个
print('05.',L[-3:-1])
# 记住倒数第一个元素的索引是-1。

# 切片操作十分有用。我们先创建一个0-99的数列：
L=list(range(100))
# 前11-20个数
print('06.',L[10:20])
# 前10个数，每两个取一个
print('07.',L[:10:2])
# 所有数，每5个取一个
print('08.',L[::5])
# 甚至什么都不写，只写[:]就可以原样复制一个list
print('09.',L[:])


# tuple也是一种list，唯一区别是tuple不可变。因此，tuple也可以用切片操作，只是操作的结果仍是tuple
print('10.',(1,2,3,4,5)[1:2])
# 字符串'xxx'也可以看成是一种list，每个元素就是一个字符。因此，字符串也可以用切片操作，只是操作结果仍是字符串
print('11.','ABCDEFG'[3:4])

# 在很多编程语言中，针对字符串提供了很多各种截取函数（例如，substring），其实目的就是对字符串切片。Python没有针对字符串的截取函数，只需要切片一个操作就可以完成，非常简单。
# 有了切片操作，很多地方循环就不再需要了。Python的切片非常灵活，一行代码就可以实现很多行循环才能完成的操作。