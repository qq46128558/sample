# Python可以处理任意大小的整数，当然包括负整数，在程序中的表示方法和数学上的写法一模一样，例如：1，100，-8080，0，等等。
# 计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，例如：0xff00，0xa5b4c3d2，等等。
# 对于很大或很小的浮点数，就必须用科学计数法表示，把10用e替代，1.23x109就是1.23e9，或者12.3e8，0.000012可以写成1.2e-5，等等。
# 字符串是以单引号'或双引号"括起来的任意文本
# 如果字符串内部既包含'又包含"怎么办？可以用转义字符\来标识

# 如果字符串里面有很多字符都需要转义，就需要加很多\，为了简化，Python还允许用r''表示''内部的字符串默认不转义
print('\\\t\\')
print(r'\\\t\\')

# 如果字符串内部有很多换行，用\n写在一行里不好阅读，为了简化，Python允许用'''...'''的格式表示多行内容, 这是交互式命令行内输入，注意在输入多行内容时，提示符由>>>变为...，提示你可以接着上一行输入
# 如果写成程序,如下
print('''line1
line2
line3''')
# 多行字符串'''...'''还可以在前面加上r使用

# 布尔值和布尔代数的表示完全一致，一个布尔值只有True、False两种值，要么是True，要么是False，在Python中，可以直接用True、False表示布尔值（请注意大小写）
# 布尔值可以用and、or和not运算。
# 空值是Python里一个特殊的值，用None表示。
# 变量名必须是大小写英文、数字和_的组合，且不能用数字开头
# 在Python中，等号=是赋值语句，可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量
# 这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错

# 当我们写：
# a = 'ABC'
# Python解释器干了两件事情：
# 在内存中创建了一个'ABC'的字符串；
# 在内存中创建了一个名为a的变量，并把它指向'ABC'。
# 在Python中，通常用全部大写的变量名表示常量

print(r'10/3=',10/3)
print(r'9/3=',9/3)
print(r'10//3=',10//3) # 这个叫地板除,只取结果的整数部分
print(r'10%3=',10%3)

# Python的整数没有大小限制
# Python的浮点数也没有大小限制，但是超出一定范围就直接表示为inf（无限大）
